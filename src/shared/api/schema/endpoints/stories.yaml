# api/endpoints/stories.yaml
findMany:
   summary: Get all stories
   description: Retrieves a list of stories.
   tags:
      - stories
   parameters:
      - name: page
        in: query
        required: false
        schema:
           type: integer
           default: 1
      - name: limit
        in: query
        required: false
        schema:
           type: integer
           default: 10
      - name: search
        in: query
        required: false
        schema:
           type: string
           default: ""
      - name: sort
        in: query
        required: false
        schema:
           type: string
           default: ""
           enum:
              - best
              - popular
              - new
      - name: length
        in: query
        required: false
        schema:
           type: string
           default: ""
           enum:
              - short
              - medium
              - long
   responses:
      "200":
         description: Successful operation
         content:
            application/json:
               schema:
                  type: array
                  items:
                     $ref: "#/components/schemas/Story"
      "400":
         $ref: "../responses.yaml#/BadRequestError"
      "401":
         $ref: "../responses.yaml#/UnauthorizedError"
      "404":
         $ref: "../responses.yaml#/NotFoundError"

findOne:
   summary: Get a story by ID
   description: Retrieves a single story based on its ID.
   tags:
      - stories
   parameters:
      - in: path
        name: storyId
        schema:
           type: string
        required: true
        description: ID of the story to retrieve.
   responses:
      "200":
         description: Successful operation
         content:
            application/json:
               schema:
                  $ref: "#/components/schemas/Story"
      "400":
         $ref: "../responses.yaml#/BadRequestError"
      "401":
         $ref: "../responses.yaml#/UnauthorizedError"
      "404":
         $ref: "../responses.yaml#/NotFoundError"

findScenes:
   summary: Get all scenes in a story
   description: Retrieves a list of scenes in a story.
   tags:
      - stories
   parameters:
      - in: path
        name: storyId
        schema:
           type: string
        required: true
        description: ID of the story to retrieve scenes from.
   responses:
      "200":
         description: Successful operation
         content:
            application/json:
               schema:
                  type: array
                  items:
                     $ref: "#/components/schemas/Scene"
      "400":
         $ref: "../responses.yaml#/BadRequestError"
      "404":
         $ref: "../responses.yaml#/NotFoundError"

components:
   schemas:
      Story:
         type: object
         properties:
            id:
               type: string
            name:
               type: string
            description:
               type: string
            img:
               type: string
            author:
               type: object
               properties:
                  id:
                     type: string
                  login:
                     type: string
               required:
                  - id
                  - login
            tags:
               type: array
               items:
                  type: string
            sceneCount:
               type: integer
               format: int32
            passes:
               type: integer
               format: int32
            likes:
               type: integer
               format: int32
            isLiked:
               type: boolean
            date:
               type: string
               format: date
         required:
            - id
            - name
            - description
            - img
            - author
            - tags
            - sceneCount
            - passes
            - likes
            - isLiked
            - date
      Scene:
         type: object
         required: # Определяем обязательные поля согласно вашему типу
            - id
            - storyId
            - number
            - type
            - answers
            - title
            - description
            - img
         properties:
            id:
               type: string
               description: "Scene ID"
            storyId:
               type: string
               description: "ID of the story this scene belongs to"
            number:
               type: integer
               format: int32
               description: "Scene number within the story"
            type:
               type: string
               enum:
                  - default
                  - end
               description: "Type of the scene ('default', 'end')"
            answers:
               type: array
               description: "Possible answers/choices for this scene"
               items:
                  $ref: "#/components/schemas/Answer" # Ссылка на схему ответа
            title:
               type: string
               description: "Title of the scene"
            description:
               type: string
               description: "Detailed description of the scene"
            img:
               type: string
               format: url # Предполагаем, что это URL изображения
               description: "URL of the image associated with the scene"
            passes:
               type: integer
               format: int32
               description: "Number of times this scene has been passed"
               # nullable: true # Можно добавить, если passes может быть null, но по TS он просто undefined

      Answer: # Определяем структуру для поля `answers`
         type: object
         required:
            - id
            - text
            - nextSceneId # Предполагаем, что каждый ответ ведет к следующей сцене
         properties:
            id:
               type: string
               description: "ID of the answer choice"
            text:
               type: string
               description: "The text displayed for this answer choice"
            nextSceneId:
               type: string
               description: "ID of the next scene, or null if this is an ending choice"
